This level is crazy! 

It teaches about PHP object injection.

At first glance, its kind of weird. How the hell would you exploit a website that just has you draw some lines??

The answer is by manipulating the Logger class that is supplied in the source code!

_____________________________________________________________
class Logger{
        private $logFile;
        private $initMsg;
        private $exitMsg;
      
        function __construct($file){
            // initialise variables
            $this->initMsg="#--session started--#\n";
            $this->exitMsg="#--session end--#\n";
            $this->logFile = "/tmp/natas26_" . $file . ".log";
      
            // write initial message
            $fd=fopen($this->logFile,"a+");
            fwrite($fd,$initMsg);
            fclose($fd);
        }                       
      
        function log($msg){
            $fd=fopen($this->logFile,"a+");
            fwrite($fd,$msg."\n");
            fclose($fd);
        }                       
      
        function __destruct(){
            // write exit message
            $fd=fopen($this->logFile,"a+");
            fwrite($fd,$this->exitMsg);
            fclose($fd);
        }                       
    }
___________________________________________________________

Although the source code never actually calls an instance of the Logger class, what it does do is

store the coordinates for the drawings by using php serialization/unserialization.

That's extremely dangerous, because you can supply a serialized object instead of "drawing" inputs, and when that object is created code will be executed.

To beat this level specifically, I modified the __construct portion of the Logger class to write php that cat's out the natas27 password, and writes it to img/natas26_WHATEVER.php

With the modified exitMsg containing php, once the object is created and (immediately) destroyed (as it is never used), it writes the exit message to the location I set.

Since the normal drawings are allowed to be viewed in the img/ directory, you are also allowed to access a php file created and stored there.

Accessing the img/...php file outputs the password!


